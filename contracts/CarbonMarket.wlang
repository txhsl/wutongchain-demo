contract CarbonMarket {

    public string name = "CarbonMarket"

    public uint8 decimals = 4

    struct Archive {
        int MEA        // 主引擎数量
        int MEP        // 主引擎功率
        float MEC        // 主引擎碳转化率
        float MESFC        // 主引擎燃油消耗率

        int AEP        // 副引擎功率
        float AEC        // 副引擎碳转化率
        float AESFC        // 副引擎燃油消耗率

        float capacity        // 运载能力
        float velocity        // 航速

        float coefficient
    }

    public string getName() {
        return name
    }

    public uint8 getDecimals() {
        return decimals
    }

    public string register(string account, int MEA, int MEP, float MEC, float MESFC, int AEP, float AEC, float AESFC, float capacity, float velocity) {
        Archive arc
        arc.MEA = MEA
        arc.MEP = MEP
        arc.MEC = MEC
        arc.MESFC = MESFC
        arc.AEP = AEP
        arc.AEC = AEC
        arc.AESFC = AESFC
        arc.capacity = capacity
        arc.velocity = velocity
        arc.coefficient = (MEA * MEP * MEC * MESFC + AEP * AEC * AESFC) / (capacity * velocity)

        string json = obj_to_json(arc)
        db_set(account + "_EEXIA", json)
        event(name + "_register", account)
        return "success"
    }

    public string updateArchive(string account, int MEA, int MEP, float MEC, float MESFC, int AEP, float AEC, float AESFC, float capacity, float velocity) {
        Archive arc
        arc.MEA = MEA
        arc.MEP = MEP
        arc.MEC = MEC
        arc.MESFC = MESFC
        arc.AEP = AEP
        arc.AEC = AEC
        arc.AESFC = AESFC
        arc.capacity = capacity
        arc.velocity = velocity
        arc.coefficient = (MEA * MEP * MEC * MESFC + AEP * AEC * AESFC) / (capacity * velocity)

        string json = obj_to_json(arc)
        db_set(account + "_EEXIB", json)
        event(name + "_update", account)
        return "success"
    }

    public float getCoefficient(string account) {
        string jsonA = db_get<string>(account + "_EEXIA")
        string jsonB = db_get<string>(account + "_EEXIB")
        Archive arcA = json_to_obj<Archive>(jsonA)
        Archive arcB = json_to_obj<Archive>(jsonB)
        return arcA.coefficient - arcB.coefficient
    }

    public string settleAccount(string account, int distance) {
        string jsonA = db_get<string>(account + "_EEXIA")
        string jsonB = db_get<string>(account + "_EEXIB")
        Archive arcA = json_to_obj<Archive>(jsonA)
        Archive arcB = json_to_obj<Archive>(jsonB)
        float balance = db_get<float>(account + "_balance")

        balance += (arcA.coefficient - arcB.coefficient) * distance

        db_set(account + "_balance", balance)
        event(name + "_settle", account)
        return "success"
    }

    public float balanceOf(string account) {
        return db_get<float>(account + "_balance")
    }

    public string transfer(string from, string to, int amount) {
        float balanceA = db_get<float>(from + "_balance")
        float balanceB = db_get<float>(to + "_balance")
        
        if(balanceA >= amount && balanceB + amount > balanceB) {
            balanceA = balanceA - amount
            balanceB = balanceB + amount

            db_set(from + "_balance", balanceA)
            db_set(to + "_balance", balanceB)
            event(name + "_transfer", to)
        }
        else {
            return "failed"
        }
        return "success"
    }
}